#!/usr/bin/env bash

a=5
b=6
result=$[a+b]  # [] 执行基本的算数运算
echo "result = ${result}"


# Shell中的 test 命令用于检查某个条件是否成立，它可以进行数值、字符和文件三个方面的测试。
# if 表达式参考：https://blog.csdn.net/xushiyu1996818/article/details/84545103

# 数值测试
# -eq	等于则为真 (或者使用 ==)
# -ne	不等于则为真
# -gt	大于则为真
# -ge	大于等于则为真
# -lt	小于则为真
# -le	小于等于则为真
num1=100
num2=100
if test $[num1] == $[num2]
then
    echo "num1 == num2"
else
    echo "num1 != num2"
fi

if [ ${num1} = ${num2} ]
then
    echo "num1 == num2"
else
    echo "num1 != num2"
fi

# 格式1：test <测试表达式>
# 格式2：[<条件表达式>]
# 格式1和格式2是等价的。
# test 一般在linux界面用，[   ]一般在if表达式用。[] 左右都需要有空格，并且 在[  ]中不能用 &&  ||，[] 要用：
# -a 与 （不会进行逻辑短路）
# -o 或 （不会进行逻辑短路）
# ! 非  （优先级为： ! 最高， -a 次之， -o 最低）

# [[ ]]，这是内置在shell中的一个命令，它就比刚才说的[ ]强大的多了。&&, ||, <和> 操作符 在 [[ ]] 中支持
# [ ... ]为shell命令，所以在其中的表达式应是它的命令行参数，所以串比较操作符">" 与"<"必须转义，否则就变成IO改向操作符了。


# 字符串测试
# =	        等于则为真
# !=	    不相等则为真
# -z 字符串	字符串的长度为零则为真
# -n 字符串	字符串的长度不为零则为真
str1="hello1"
str2="hahaha"
if [[ ${str1} = ${str2} ]]
then
    echo "两个字符串相等！"
else
    echo "两个字符串不相等！"
fi

if [[ -n ${str1} ]]
then
    echo "str not empty"
fi


# 文件测试
# -e 文件名	如果文件存在则为真
# -r 文件名	如果文件存在且可读则为真
# -w 文件名	如果文件存在且可写则为真
# -x 文件名	如果文件存在且可执行则为真
# -s 文件名	如果文件存在且至少有一个字符则为真
# -d 文件名	如果文件存在且为目录则为真
# -f 文件名	如果文件存在且为普通文件则为真
# -c 文件名	如果文件存在且为字符型特殊文件则为真
# -b 文件名	如果文件存在且为块特殊文件则为真
if [[ -e ./bash ]]
then
    echo '文件已存在!'
else
    echo '文件不存在!'
fi
